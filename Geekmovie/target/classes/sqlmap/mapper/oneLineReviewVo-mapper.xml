<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : package + classname -->
<mapper namespace="oneLineReviewVo">

	

	
	
	<select id="Select" parameterType="HashMap" resultType="oneLineReviewVo">
		<![CDATA[
			select oneLineReviewId, userId, movieId, score, comment, likes, dislikes, gendate, moddate
			from onelinereview
			where 1=1
					]]>
			<if test='searchMode =="movie" and query != ""' >
			and movieId = #{query}
			</if>	
			<if test='searchMode =="keyword" and query != ""' >
			and comment like concat('%', #{query},'%')
			</if>	
			<if test='searchMode =="author" and query != ""' >
			and userId like concat('%', #{query},'%')
			</if>		
			<![CDATA[
			order by oneLineReviewId DESC
			Limit #{nowPageStart}, #{Size};
			]]>
			
	</select>
	
	<select id="Count" parameterType="HashMap" resultType="int">
		<![CDATA[
			select count(oneLineReviewId) from onelinereview
			where 1=1
		]]>
			<if test='searchMode =="movie" and query != ""' >
			and movieId = #{query};
			</if>	
			<if test='searchMode =="keyword" and query != ""' >
			and comment like concat('%', #{query},'%');
			</if>	
			<if test='searchMode =="author" and query != ""' >
			and userId like concat('%', #{query},'%');
			</if>	
	</select>


	<delete id="Delete" parameterType="HashMap">
			<![CDATA[
			delete from onelinereview
			where oneLineReviewId = #{oneLineReviewId}
			]]>
	</delete>
	
	<insert id="Create" parameterType="HashMap">
			<![CDATA[
			insert into onelinereview(userId, movieId, score, comment) 
			values(#{userId}, #{movieId}, #{score}, #{content});
			]]>
	</insert>
	
	<update id="Update" parameterType="HashMap">
				<![CDATA[
			update onelinereview set score=#{score}, comment=#{content}, moddate=now() where oneLineReviewId=#{olrId};
			]]>
	</update>
	
	<update id="UpdateLike" parameterType="HashMap">
			<![CDATA[
			update onelinereview set likes=#{likeNum}, dislikes=#{dislikeNum} where oneLineReviewId=#{oneLineReviewId};
			]]>
	</update>
	
	<select id="SelectAny" parameterType="HashMap" resultType="String">
			<![CDATA[
			select ${query} from onelinereview
			where oneLineReviewId=#{oneLineReviewId};
			]]>
			
	</select>
	
	<select id="SelectUser" parameterType="HashMap" resultType="oneLineReviewVo">
		<![CDATA[
			select oneLineReviewId, userId, movieId, score, comment, likes, dislikes, gendate, moddate
			from onelinereview
			where userId=#{userId}
			order by oneLineReviewId DESC
			Limit 10;
		]]>	
	</select>
	
	<select id="GetPage" parameterType="int" resultType="int">
		<![CDATA[
				select count(oneLineReviewId) from onelinereview where oneLineReviewId>=#{oneLineReviewId} ;
		]]>	
	</select>

	<select id="SelectMovie" parameterType="HashMap" resultType="oneLineReviewVo">
		<![CDATA[
			select oneLineReviewId, userId, movieId, score, comment, likes, dislikes, gendate, moddate
			from onelinereview
			where movieId = #{movieId}
			order by oneLineReviewId DESC
			Limit #{nowPageStart}, #{Size};
			]]>
			
	</select>

	
	<resultMap type="oneLineReviewLikeVo" id="oneLineReviewJoinTarget">
			<result column="oneLineReviewId" property="oneLineReviewId" />
			<result column="userId" property="userId" />
			<!--<result column="mode" property="mode" />-->
	</resultMap>
	
	<resultMap type="oneLineReviewVo" id="oneLineReviewJoin">
		<result column="movieId" property="movieId" />
		<result column="score" property="score" />
		<result column="comment" property="comment" />
		<result column="likes" property="likes" />
		<result column="dislikes" property="dislikes" />
		<result column="gendate" property="gendate" />
		<result column="moddate" property="moddate" />
		<result column="oneLineReviewId" property="oneLineReviewId" />
		<collection property="oneLineReviewLikeVo" resultMap="oneLineReviewJoinTarget"/>
	</resultMap>
	
		<select id="UserLike" parameterType="HashMap" resultMap="oneLineReviewJoin">
	<![CDATA[
			select a.movieId, a.userId, a.score, a.comment, a.likes, a.dislikes, a.gendate, a.moddate, a.oneLineReviewId
			from onelinereview as a
			join
			onelinereviewlike as b
			on a.oneLineReviewId = b.oneLineReviewId
            where b.userId=#{userId}  and b.mode=1 
            order by oneLineReviewId DESC limit #{nowPageStart}, #{Size};
		]]>
	</select>

</mapper>